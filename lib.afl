function Divrg(price, indicator, zigzagParam)
{
	zigZags = Zig(indicator, zigzagParam);
	peaks = Peak(indicator, zigzagParam, 1);
	troughs = Trough(indicator, zigzagParam, 1);
	peaksCounter = 0;
	troughsCounter = 0;
	zigzagPeaks[0] = zigZags[0];
	zigzagTroughs[0] = zigZags[0];
	priceAtPeaks[0] = price[0];
	priceAtTroughs[0] = price[0];
	
	ret = 0;
	for (i = 0; i < BarCount; i++)
	{
		if(zigZags[i] == peaks[i])
		{
			peaksCounter++;
			zigzagPeaks[peaksCounter] = zigZags[i];
			priceAtPeaks[peaksCounter] = price[i];
			if(priceAtPeaks[peaksCounter] > priceAtPeaks[peaksCounter-1] AND zigzagPeaks[peaksCounter] < zigzagPeaks[peaksCounter-1]) // bearish divergence 
			{
				ret[i] = -1;
				continue;
			}
		}
		
		if(zigZags[i] == troughs[i])
		{
			troughsCounter++;
			zigzagTroughs[troughsCounter] = zigZags[i];
			priceAtTroughs[troughsCounter] = price[i];
			if(priceAtTroughs[troughsCounter] < priceAtTroughs[troughsCounter-1] AND zigzagTroughs[troughsCounter] > zigzagTroughs[troughsCounter-1]) // bullish divergence
			{
				ret[i] = 1;
				continue;
			}
		}
		
		ret[i] = 0;
	}
	
	return ret;
}

function LinesCross(line1, line2)
{
	ret = Cross(line1, line2) OR Cross(line2, line1);
	return ret;
}

function TrendLineBreak(values, studyId, chartId)
{
	trendLine = Study(studyId, chartId);
	return LinesCross(values, trendLine);
}

function TrendLineBreakPrice(studyId, chartId)
{
	ret = TrendLineBreak(Open, studyId, chartId) OR TrendLineBreak(High, studyId, chartId) 
		OR TrendLineBreak(Low, studyId, chartId) OR TrendLineBreak(Close, studyId, chartId);
	return ret;
}

function ExplorerGetBckgColor(data)
{
	return IIf(data != 0, IIf(data > 0, colorPaleGreen, colorRose), colorDefault);
}

procedure ExplorerAddColumn(colName, colData)
{
	AddColumn(colData, colName, 1.0, colorDefault, ExplorerGetBckgColor(colData));
}